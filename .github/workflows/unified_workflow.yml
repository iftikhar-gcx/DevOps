name: NETLIFY - Multi Project Pipeline

on:
  push:
    branches:
      - master

jobs:
  check-changes:
    runs-on: ubuntu-latest
    name: Updates Files
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: List all changed files
        id: set_project_changes
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          project_01_changes='false'
          project_02_changes='false'
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file has changes"
            if [[ $file == *Project_01* ]]; then
              project_01_changes='true'
              echo "PROJECT_01_CHANGES=$project_01_changes" >> $GITHUB_OUTPUT
            fi
            if [[ $file == *Project_02* ]]; then
              project_02_changes='true'
              echo "PROJECT_02_CHANGES=$project_02_changes" >> $GITHUB_OUTPUT
            fi
          done
          echo "Updating Variable Project_01_Changes to $project_01_changes"
          echo "Updating Variable Project_02_Changes to $project_02_changes"
    outputs:
      project_01_changes: ${{ steps.set_project_changes.outputs.PROJECT_01_CHANGES }}
      project_02_changes: ${{ steps.set_project_changes.outputs.PROJECT_02_CHANGES }}

  echo:
    name: Echoing Variables
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - name: Variables Check
        run: |
          echo "Value of Project_01_Changes is: ${{ needs.check-changes.outputs.project_01_changes }}"
          echo "Condition check: ${{ needs.check-changes.outputs.project_01_changes == 'true' }}"
          echo "Value of Project_02_Changes is: ${{ needs.check-changes.outputs.project_02_changes }}"
          echo "Condition check: ${{ needs.check-changes.outputs.project_02_changes == 'true' }}"


  project_01:
    name: Uploading Project 01 to netlify
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.env.PROJECT_01_CHANGES == 'true' }}
    steps:
      - name: Build Project 01 - Echo
        run : echo "Building Project 01..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Installing Netlify CLI
        run : npm install -g netlify-cli

      - name: Deploying to Netlify
        run : |
          netlify deploy --prod \
          --dir=. \
          --site ${{ secrets.NETLIFY_PROJECT_01_SITE_ID }} \
          --auth ${{ secrets.NETLIFY_Project_01_02_TOKEN }}

  project_02:
    name: Uploading Project 02 to netlify
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.env.PROJECT_02_CHANGES == 'true' }}
    steps:
      - name: Build Project 02 - Echo
        run : echo "Building Project 02..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Installing Netlify CLI
        run : npm install -g netlify-cli

      - name: Deploying to Netlify
        run : |
          netlify deploy --prod \
          --dir=. \
          --site ${{ secrets.NETLIFY_PROJECT_02_SITE_ID }} \
          --auth ${{ secrets.NETLIFY_Project_01_02_TOKEN }}

  no_project:
      name: Failure
      runs-on: ubuntu-latest
      needs: [project_01, project_02]
      steps:
        - name: Echo failure
          run : echo "Building conditions failed..."