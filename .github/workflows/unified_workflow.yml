name: NETLIFY - Multi Project Pipeline

on:
  push:
    branches:
      - master

jobs:
  check-changes:
    runs-on: ubuntu-latest
    name: Test changed-files
    outputs:
        Project_01_Changes: ${{ steps.set_project_changes.outputs.Project_01_Changes }}
        Project_02_Changes: ${{ steps.set_project_changes.outputs.Project_02_Changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          Project_01_Changes=false
          Project_02_Changes=false
          for file in ${{ steps.get_changed_files.outputs.ALL_CHANGED_FILES }}; do
            if [[ $file == *Project_01* ]]; then
              Project_01_Changes=true
            fi
            if [[ $file == *Project_02* ]]; then
              Project_02_Changes=true
            fi
          done
          echo "::set-output name=Project_01_Changes::$Project_01_Changes"
          echo "::set-output name=Project_02_Changes::$Project_02_Changes"


  project_01:
    name: Uploading Project 01 to netlify
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check_changes.outputs.Project_01_Changes == true }}
    steps:
      - name: Build Project 01 - Echo
        run : echo "Building Project 01..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Installing Netlify CLI
        run : npm install -g netlify-cli

      - name: Deploying to Netlify
        run : |
          netlify deploy --prod \
          --dir=. \
          --site ${{ secrets.NETLIFY_PROJECT_01_SITE_ID }} \
          --auth ${{ secrets.NETLIFY_Project_01_02_TOKEN }}

  project_02:
    name: Uploading Project 02 to netlify
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check_changes.outputs.Project_02_Changes == true }}
    steps:
      - name: Build Project 02 - Echo
        run : echo "Building Project 02..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Installing Netlify CLI
        run : npm install -g netlify-cli

      - name: Deploying to Netlify
        run : |
          netlify deploy --prod \
          --dir=. \
          --site ${{ secrets.NETLIFY_PROJECT_02_SITE_ID }} \
          --auth ${{ secrets.NETLIFY_Project_01_02_TOKEN }}

  no_project:
      name: Failure
      runs-on: ubuntu-latest
      steps:
        - name: Echo failure
          run : echo "Building conditions failed..."